{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;AChH8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAW;AACf;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,oCAAoC,kCAAkC;AACtE;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACjE0B;AACA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,sDAAsD;AACtD;AACA;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB;AACjB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,QAAQ,iDAAS,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC5GpB;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACD;;;;;;;;;;;;;;;ACvEpB,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,+BAA+B;AAC9E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8BAA8B;AAC7E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW;AACpD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACjRrB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,sCAAsC;AACtC;AACA;AACA,SAAS;AACT;AACA,+BAA+B;AAC/B;AACA,SAAS;AACT;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACpDnB;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;ACnEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,IAAI,YAAY,WAAW;AAC1E;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,IAAsB;AACtB;;;;;;UC9BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNiC;AACE;AACA;AACA;AACE;AACJ;AACE;AACO;AAC1C;AACA;AACA;AACA,0CAA0C,yDAAS;AACnD;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n    // Calc\r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n\r\n        // Если не хватает каких-то данных от пользователя - выводим пустую строку \r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '____'; // Можете придумать что угодно\r\n            return;\r\n        }\r\n\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n\r\n                e.target.classList.add(activeClass);\r\n\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDinamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch (input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDinamicInformation('#height');\r\n    getDinamicInformation('#weight');\r\n    getDinamicInformation('#age');\r\n}\r\n\r\nexport default calc;","import {getResource} from '../services/services';\r\n\r\nfunction cards() {\r\n    // Используем классы для карточек\r\n\r\n    /**Создаём класс, в котором мы сохраняем инфу для построения карточек меню */\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 27;\r\n            this.changeToUAH();\r\n        }\r\n\r\n        /**Функция, которая конвектирует доллары в грн */\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        /**Метод, который отображает ел на странице */\r\n        render() {\r\n            const element = document.createElement('div');\r\n\r\n            if (this.classes.length === 0) {\r\n                this.classes = \"menu__item\";\r\n                element.classList.add(this.classes);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            /** в методе forEach мы используем деструктиризацию объекта */\r\n            data.forEach(({img, altimg, title, descr, price}) => {\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n\r\n    // axios.get('http://localhost:3000/menu')\r\n    //     .then(data => {\r\n    //         data.data.forEach(({ img, altimg, title, descr, price }) => {\r\n    //             new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n    //         });\r\n    //     });\r\n}\r\n\r\nexport default cards;","import {closeModal, openModal} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n    // Forms\r\n\r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо, скоро мы с вами свяжемся',\r\n        failure: 'Что-то пошло не так'\r\n    };\r\n\r\n    /** Здесь мы на каждую форму добавили ф-цию postData */\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    });\r\n\r\n    /** Привязываем постинг данных */\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault(); /** Отменяем стандартное поведение формы */\r\n\r\n            /** Здесь мы создаём новый ел, в который помещаем инфу\r\n             * о статусе запроса\r\n             */\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                 display: block;\r\n                 margin: 0 auto;\r\n             `;\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n\r\n\r\n            const formData = new FormData(form); /** пишем форму, \r\n             которая принимает данные от пользователя и делает данные \r\n             в формате ключ-значение */\r\n\r\n\r\n            /** Преобразум formData в json формат */\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n                .then(data => {\r\n                    console.log(data); /** data - это те данные, \r\n                     которые возвращаются из промиса, которые \r\n                     вернул сервер */\r\n\r\n                    showThanksModal(message.success);\r\n                    /** Когда наш запрос успешно отработал, мы выводим \r\n                     * модалку-благодарку\r\n                     */\r\n\r\n                    statusMessage.remove();\r\n                }).catch(() => {\r\n                    showThanksModal(message.failure); /** Если запрос \r\n                 не успешный, то выводим соответствующую модалку */\r\n\r\n                }).finally(() => {\r\n                    form.reset(); // обнуляем введённые значения в формах \r\n                });\r\n        });\r\n    }\r\n\r\n    /** Функция, которая выводит модалку благодарку */\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide'); // скрыли то, что на модалке\r\n        openModal('.modal', modalTimerId); // открыли само модальное окно\r\n\r\n\r\n        /** Создаём новую начинку модального окна */\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n             <div class='modal__content'>\r\n                 <div class='modal__close' data-close>&times;</div>\r\n                 <div class='modal__title'>${message}</div>\r\n             </div>\r\n         `;\r\n\r\n        document.querySelector('.modal').append(thanksModal);/**\r\n         добавили новое содержимое модалки на страницу */\r\n\r\n        /** Прописали функционал, который после благодарки\r\n         * возвразает прежнее содержимое модалки\r\n         */\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');\r\n        }, 4000);\r\n    }\r\n\r\n    fetch('http://localhost:3000/menu') // отправляем запрос на db.json\r\n        .then(data => data.json()) /** получаем ответ \r\n         в data и превращаем его в обычный js объект */\r\n        .then(res => console.log(res));\r\n\r\n}\r\n\r\nexport default forms;","function openModal(modalSelector, modalTimerId) {\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden'; /* прописали стиль, \r\n    который не позволяет прокручивать страницу */\r\n\r\n\r\n    console.log(modalTimerId);\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId); /** в случае если пользователь\r\n    сам открыл модальное окно, мы отменяем setTimeout \r\n    c всплытием модального окна */\r\n    }\r\n    \r\n}\r\n\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    document.body.style.overflow = '';\r\n}\r\n\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n    // Modal\r\n\r\n    const modalTrigger = document.querySelectorAll(triggerSelector);\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modalTrigger.forEach(item => {\r\n        item.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n    });\r\n\r\n\r\n    /** Ниже мы повесили событие на само модальное окно, \r\n     * при нажатии на место за пределами этого окна,\r\n     * оно закрывается\r\n     */\r\n    modal.addEventListener('click', (e) => {\r\n\r\n        /** Если мы кликаем на подложку ИЛИ на какой-то крестик,\r\n         * то закрываем модальное окно\r\n         */\r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    /** Событие нажатии кнопки в доке, при коротором\r\n     * закрывается модальное окно\r\n     */\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === \"Escape\" && modal.classList.contains('show')) {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal(modalSelector, modalTimerId);\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nexport default modal;\r\nexport {closeModal};\r\nexport {openModal};","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n    // Slider\r\n\r\n    // Мой вариант слайдера\r\n\r\n    // const sliderNext = document.querySelector('.offer__slider-next'),\r\n    //       sliderPrev = document.querySelector('.offer__slider-prev'),\r\n    //       curentCounter = document.querySelector('#current'),\r\n    //       sliderImages = document.querySelectorAll('.offer__slide');\r\n\r\n\r\n    // function renderImg() {\r\n    //     sliderImages.forEach((item, i) => {\r\n    //         if (i == curentCounter.textContent-1) {\r\n    //             item.style.display = 'block';    \r\n    //         } else {\r\n    //             item.style.display = 'none';\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    // renderImg();\r\n\r\n    // const useNextSlider = () => {\r\n\r\n    //     if (+curentCounter.textContent >= 1 && +curentCounter.textContent <= 3) {\r\n    //         curentCounter.textContent = `0${+curentCounter.textContent + 1}`;\r\n    //         renderImg();\r\n    //     } else {\r\n    //         curentCounter.textContent = '01';\r\n    //         renderImg();\r\n    //     }\r\n    // };\r\n\r\n    // const usePreviousSlider = () => {\r\n\r\n    //     if (+curentCounter.textContent > 1 && +curentCounter.textContent <= 4) {\r\n    //         curentCounter.textContent = `0${curentCounter.textContent - 1}`;\r\n    //         renderImg();\r\n    //     } else {\r\n    //         curentCounter.textContent = '04';\r\n    //         renderImg();\r\n    //     }\r\n    // };\r\n\r\n    // sliderNext.addEventListener('click', () => {\r\n    //     useNextSlider();\r\n    // });\r\n\r\n    // sliderPrev.addEventListener('click', () => {\r\n    //     usePreviousSlider();\r\n    // });\r\n\r\n\r\n\r\n\r\n    // Первый способ создания слайдера - 61 урок\r\n\r\n    // const slides = document.querySelectorAll('.offer__slide'),\r\n    //     prev = document.querySelector('.offer__slider-prev'),\r\n    //     next = document.querySelector('.offer__slider-next'),\r\n    //     total = document.querySelector('#total'),\r\n    //     current = document.querySelector('#current');\r\n\r\n    // let slideIndex = 1;\r\n\r\n    // showSlides(slideIndex);\r\n\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // } else {\r\n    //     total.textContent = slides.length;\r\n    // }\r\n\r\n    // function showSlides(n) {\r\n    //     if (n > slides.length) {\r\n    //         slideIndex = 1;\r\n    //     }\r\n    //     if (n < 1) {\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n\r\n    //     slides.forEach((item) => item.style.display = 'none');\r\n\r\n    //     slides[slideIndex - 1].style.display = 'block';\r\n\r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     } else {\r\n    //         current.textContent = slideIndex;\r\n    //     }\r\n\r\n    // }\r\n\r\n    // function plusSlides (n) {\r\n    //     showSlides(slideIndex += n);\r\n    // }\r\n\r\n    // prev.addEventListener('click', function(){\r\n    //     plusSlides(-1);\r\n    // });\r\n\r\n    // next.addEventListener('click', function(){\r\n    //     plusSlides(1);\r\n    // });\r\n\r\n\r\n\r\n\r\n    // Второй способ создания слайда\r\n\r\n    const slides = document.querySelectorAll(slide),\r\n        slider = document.querySelector(container),\r\n        prev = document.querySelector(prevArrow),\r\n        next = document.querySelector(nextArrow),\r\n        total = document.querySelector(totalCounter),\r\n        current = document.querySelector(currentCounter),\r\n        slidesWrapper = document.querySelector(wrapper),\r\n        slidesField = document.querySelector(field),\r\n        width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n    let slideIndex = 1;\r\n    let offset = 0;\r\n\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    /**  Здесь мы выставляем ширину блока, \r\n    в котором расположены картинки для слайдера */\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n\r\n\r\n    /** Ниже мы установили одинаковою ширину слайдов */\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n\r\n    const indicators = document.createElement('ol');\r\n    const dots = [];\r\n\r\n    indicators.classList.add('carousel-indicators');\r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    function dotActive() {\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    }\r\n\r\n    function showActualCounte() {\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n    }\r\n\r\n    function moveSliderOX() {\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n    }\r\n\r\n    function deleteNotDigits(str) {\r\n        // return +str.replace(/\\D/g, '');\r\n            return +str.substring(0, str.length-2);     \r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += deleteNotDigits(width);\r\n            console.log(offset);\r\n        }\r\n\r\n        moveSliderOX();\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        showActualCounte();\r\n\r\n        dotActive();\r\n    });\r\n\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n\r\n        moveSliderOX();\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        showActualCounte();\r\n\r\n        dotActive();\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            offset = deleteNotDigits(width) * (slideTo - 1);\r\n\r\n            moveSliderOX();\r\n\r\n            showActualCounte();\r\n\r\n            dotActive();\r\n        });\r\n    });\r\n\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n    // Tabs\r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n        tabsContent = document.querySelectorAll(tabsContentSelector), // содержит блоки информации табов  \r\n        tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n    function hideTabContent() { // функция, которая скрывает табы (блоки инфы)\r\n\r\n        tabsContent.forEach(item => { // скрывает информацию раздела (таба)\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => { // удаляем активный класс\r\n            item.classList.remove(activeClass);\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) { // функция, которая заново показывает информацию таба (раздела)\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    /*\r\n    ниже делаем делегирование события, которое по \r\n    условию смотрит есть ли полученный объект данных и \r\n    имеет ли он класс tabheader__item (неактивного раздела),\r\n    если да, то он сравнивает\r\n    полученный объект с объектами из tabs (то есть, \r\n    сравнивает название роздела, на которое нажал юзер, с \r\n    названиями разделов tabs) Если есть совпадение, то запускаются\r\n    функции скрытия разделов и отображения необходимого раздела)\r\n    */\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport default tabs;","function timer(id) {\r\n    // Timer\r\n\r\n\r\n    const ded = new Date();\r\n    ded.setDate(ded.getDate() + 1); // здесь создал переменную с ткущей датой +1 день\r\n    const deadline = ded;\r\n\r\n    /*Это функция, которая возвращает инфыу о том, сколько\r\n    времени осталось до конца дедлайна */\r\n    function getTimeRemaining(endtime) {\r\n        const t = Date.parse(endtime) - Date.parse(new Date());\r\n        // t - здесь прописано сколько осталось времени до конца дедлайна в миллисекундах\r\n        const days = Math.floor(t / (1000 * 60 * 60 * 24 /*сколько в сутках миллисекунд*/)),\r\n            /** В переменной days мы написали сколько остаётся дней\r\n             * до конца акции. endtime - это наш дедлайн\r\n             */\r\n            hours = Math.floor((t / (1000 * 60 * 60) % 24)),\r\n            minutes = Math.floor((t / 1000 / 60) % 60),\r\n            seconds = Math.floor((t / 1000) % 60);\r\n\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n    function getZero(num) { // функция, которая доставляет 0 к дням и часам, если те <10\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    // Функция setClock, которая будет отображать время на странице\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector);\r\n        const days = timer.querySelector('#days');\r\n        const hours = timer.querySelector('#hours');\r\n        const minutes = timer.querySelector('#minutes');\r\n        const seconds = timer.querySelector('#seconds');\r\n        const timeInterval = setInterval(updateCLock, 1000);\r\n\r\n        updateCLock();\r\n\r\n        function updateCLock() { // функция, которая будет обновлять время каждую сек\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = t.minutes;\r\n            seconds.innerHTML = t.seconds;\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    setClock(id, deadline);\r\n}\r\n\r\nexport default timer;","    // Постинг данных\r\n    const postData = async (url, data) => {\r\n\r\n        // В переменной res мы получаем промис\r\n        const res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: data // data - данные, которые будут постится\r\n        });\r\n\r\n        return await res.json(); // возвращаем проми с формате json\r\n    };\r\n\r\n    const getResource = async (url) => {\r\n\r\n        // В переменной res мы получаем промис\r\n        const res = await fetch(url);\r\n\r\n        /** Здесь мы создаём ошибкуб если статус запроса неудачный */\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json(); // возвращаем промис в формате json\r\n    };\r\n\r\n\r\n    export {postData};\r\n    export {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import calc from'./modules/calc';\r\nimport cards from'./modules/cards';\r\nimport forms from'./modules/forms';\r\nimport modal from'./modules/modal';\r\nimport slider from'./modules/slider';\r\nimport tabs from'./modules/tabs';\r\nimport timer from'./modules/timer';\r\nimport {openModal} from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', function() {\r\n\r\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000);\r\n\r\n    calc();\r\n    cards();\r\n    forms('form', modalTimerId);\r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    timer('.timer');\r\n    slider({\r\n        container: '.offer__slider',\r\n        slide: '.offer__slide',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner'\r\n    });\r\n});"],"names":[],"sourceRoot":""}